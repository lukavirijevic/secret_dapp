/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SecretRegistry,
  SecretRegistryInterface,
} from "../SecretRegistry";

const _abi = [
  {
    inputs: [],
    name: "AlreadyConfirmed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidThreshold",
    type: "error",
  },
  {
    inputs: [],
    name: "NotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotParticipant",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownSecret",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "ReceiptConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "SecretClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "thresholdM",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "participantsCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "SecretRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
    ],
    name: "canReconstruct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
    ],
    name: "closeSecret",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
    ],
    name: "confirmReceipt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
    ],
    name: "getSecret",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "thresholdM",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "createdAt",
        type: "uint64",
      },
      {
        internalType: "address[]",
        name: "participants",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "confirmations",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "hasConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isParticipant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secretId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "thresholdM",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "participants",
        type: "address[]",
      },
      {
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
    ],
    name: "registerSecret",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611567806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063908508bd1161005b578063908508bd146100f0578063c2cf732614610120578063c44a892314610150578063d5c4e294146101805761007d565b806334539694146100825780637b48d16a1461009e5780638259436d146100ba575b600080fd5b61009c60048036038101906100979190610ec6565b61019c565b005b6100b860048036038101906100b39190610f91565b610456565b005b6100d460048036038101906100cf9190610ec6565b6108a6565b6040516100e79796959493929190611193565b60405180910390f35b61010a60048036038101906101059190610ec6565b610a73565b6040516101179190611209565b60405180910390f35b61013a60048036038101906101359190611250565b610b27565b6040516101479190611209565b60405180910390f35b61016a60048036038101906101659190611250565b610b8f565b6040516101779190611209565b60405180910390f35b61019a60048036038101906101959190610ec6565b610cbc565b005b60008060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361023c576040517f7396b90600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900460ff16610284576040517f80cb55e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61028e8233610b8f565b6102c4576040517fe438f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610359576040517f5f8a9c0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160040160008282829054906101000a900463ffffffff166103e591906112bf565b92506101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16827f086150e8d6370bd68148cf2a646d28ad763ef47426bdc1e07c8919e19f9767d54260405161044a91906112f7565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff1660008087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104f1576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838390501480610506575060008460ff16145b806105165750828290508460ff16115b1561054d576040517faabd5a0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b838390508110156106d05760008484838181106105705761056f611312565b5b90506020020160208101906105859190611341565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed906113cb565b60405180910390fd5b600060018361060591906113f5565b90505b858590508110156106bb5785858281811061062657610625611312565b5b905060200201602081019061063b9190611341565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90611475565b60405180910390fd5b80806106b390611495565b915050610608565b505080806106c890611495565b915050610550565b5060008060008781526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160000160146101000a81548160ff021916908360ff16021790555081816001018190555060018160020160006101000a81548160ff021916908315150217905550428160020160016101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060005b8484905081101561084557816003018585838181106107bd576107bc611312565b5b90506020020160208101906107d29190611341565b9080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061083d90611495565b91505061079b565b503373ffffffffffffffffffffffffffffffffffffffff16867f5fa196e9255ded69cf6e1e981c6a5b676f3e524d8a608a68c7a89b35232d178e8787879050864260405161089694939291906114ec565b60405180910390a3505050505050565b600080600080600060606000806000808a81526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610951576040517f7396b90600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160149054906101000a900460ff1682600101548360020160009054906101000a900460ff168460020160019054906101000a900467ffffffffffffffff16856003018660040160009054906101000a900463ffffffff1681805480602002602001604051908101604052809291908181526020018280548015610a5257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a08575b50505050509150975097509750975097509750975050919395979092949650565b6000806000808481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610aec576000915050610b22565b8060000160149054906101000a900460ff1660ff168160040160009054906101000a900463ffffffff1663ffffffff1610159150505b919050565b60006001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806000808581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c08576000915050610cb6565b600081600301905060005b8180549050811015610cae578473ffffffffffffffffffffffffffffffffffffffff16828281548110610c4957610c48611312565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c9b5760019350505050610cb6565b8080610ca690611495565b915050610c13565b506000925050505b92915050565b60008060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d5c576040517f7396b90600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610de5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020160009054906101000a900460ff16610e2d576040517f80cb55e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160020160006101000a81548160ff021916908315150217905550817f9eeaa1fd312706438996ea5f267b16f4df72bf3b38776845a8e64193a9359f9d42604051610e7a91906112f7565b60405180910390a25050565b600080fd5b600080fd5b6000819050919050565b610ea381610e90565b8114610eae57600080fd5b50565b600081359050610ec081610e9a565b92915050565b600060208284031215610edc57610edb610e86565b5b6000610eea84828501610eb1565b91505092915050565b600060ff82169050919050565b610f0981610ef3565b8114610f1457600080fd5b50565b600081359050610f2681610f00565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f5157610f50610f2c565b5b8235905067ffffffffffffffff811115610f6e57610f6d610f31565b5b602083019150836020820283011115610f8a57610f89610f36565b5b9250929050565b600080600080600060808688031215610fad57610fac610e86565b5b6000610fbb88828901610eb1565b9550506020610fcc88828901610f17565b945050604086013567ffffffffffffffff811115610fed57610fec610e8b565b5b610ff988828901610f3b565b9350935050606061100c88828901610eb1565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061104482611019565b9050919050565b61105481611039565b82525050565b61106381610ef3565b82525050565b61107281610e90565b82525050565b60008115159050919050565b61108d81611078565b82525050565b600067ffffffffffffffff82169050919050565b6110b081611093565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110eb81611039565b82525050565b60006110fd83836110e2565b60208301905092915050565b6000602082019050919050565b6000611121826110b6565b61112b81856110c1565b9350611136836110d2565b8060005b8381101561116757815161114e88826110f1565b975061115983611109565b92505060018101905061113a565b5085935050505092915050565b600063ffffffff82169050919050565b61118d81611174565b82525050565b600060e0820190506111a8600083018a61104b565b6111b5602083018961105a565b6111c26040830188611069565b6111cf6060830187611084565b6111dc60808301866110a7565b81810360a08301526111ee8185611116565b90506111fd60c0830184611184565b98975050505050505050565b600060208201905061121e6000830184611084565b92915050565b61122d81611039565b811461123857600080fd5b50565b60008135905061124a81611224565b92915050565b6000806040838503121561126757611266610e86565b5b600061127585828601610eb1565b92505060206112868582860161123b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ca82611174565b91506112d583611174565b9250828201905063ffffffff8111156112f1576112f0611290565b5b92915050565b600060208201905061130c60008301846110a7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561135757611356610e86565b5b60006113658482850161123b565b91505092915050565b600082825260208201905092915050565b7f7a65726f207061727469636970616e7400000000000000000000000000000000600082015250565b60006113b560108361136e565b91506113c08261137f565b602082019050919050565b600060208201905081810360008301526113e4816113a8565b9050919050565b6000819050919050565b6000611400826113eb565b915061140b836113eb565b925082820190508082111561142357611422611290565b5b92915050565b7f6475706c6963617465207061727469636970616e740000000000000000000000600082015250565b600061145f60158361136e565b915061146a82611429565b602082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b60006114a0826113eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114d2576114d1611290565b5b600182019050919050565b6114e6816113eb565b82525050565b6000608082019050611501600083018761105a565b61150e60208301866114dd565b61151b6040830185611069565b61152860608301846110a7565b9594505050505056fea26469706673582212206752f46c8d52cb253f0c0644883e504104058b35c7c8de34cbfbacc5f2322f1564736f6c63430008140033";

type SecretRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecretRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecretRegistry__factory extends ContractFactory {
  constructor(...args: SecretRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SecretRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SecretRegistry__factory {
    return super.connect(runner) as SecretRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecretRegistryInterface {
    return new Interface(_abi) as SecretRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SecretRegistry {
    return new Contract(address, _abi, runner) as unknown as SecretRegistry;
  }
}
